def engine_mass(Empuxo, Pc_Bar, razao_exp):
    ''' Metodo do Schlingloff para calculo da massa estrutural do motor F[KN] e Pc[bar] '''    
    F_KN = Empuxo/1000 # Passando de [N] para [KN]
    
    #C_prop = 0.11
    #C_tp = 1
    C_tub = 1
    
    m_valv = 0.02*(F_KN*Pc_Bar)**0.71 # Kg - massa da valvula
    m_inj = 0.25 * F_KN**0.85 # Kg - massa do injetor
    m_cc = 0.75 * F_KN**0.85 # Kg - massa da câmara de combustão
    m_ne = razao_exp * F_KN * (0.00225 * C_tub + ((0.225 - 0.075 * C_tub)/Pc_Bar)) # Kg - massa da tubeira
    m_eng_schlingloff = 1.34 * (m_valv + m_inj + m_cc + m_ne) # massa total do motor
    return m_eng_schlingloff


#print(engine_mass(617000, 47, 14.5))

import pickle
model_forest = pickle.load(open('random_forest_mass.sav', 'rb'))

# teste dos motores pressurizados por tanques

import warnings
with warnings.catch_warnings():
    warnings.simplefilter("ignore")

    print('Kestrel', model_forest.predict([[1, 10.3, 60, 27.8, 325]])[0],engine_mass(27800, 10.3, 60), 52)
    print('RD-869', model_forest.predict([[1, 20, 81.5, 2.5, 314.7]]),engine_mass(2500, 20, 81.5), 196)
    print('Aestus', model_forest.predict([[1, 11, 84, 29.4, 324]]),engine_mass(29400, 11, 84), 111)
    print('Aj10-118', model_forest.predict([[1, 9, 65, 43.7, 319.2]]),engine_mass(43700, 9, 65), 127.4)
    print('Aj10-190', model_forest.predict([[1, 8.6, 55, 26.7, 316]]),engine_mass(26700, 8.6, 55), 118)